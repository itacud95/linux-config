{
    // Debug settings
    "test-executable": "module_name",
    "test-tag": "string from catch test",
    // 
    "files.autoSave": "onFocusChange",
    "editor.formatOnSaveMode": "modifications",
    "C_Cpp.intelliSenseEngine": "disabled",
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
    "diffEditor.ignoreTrimWhitespace": false,
    "gitlens.views.searchAndCompare.files.layout": "tree",
    "git.detectSubmodulesLimit": 20,
    "extensions.ignoreRecommendations": true,
    "clangd.checkUpdates": true,
    "clangd.arguments": [
        "--limit-results=0",
        "--limit-references=0",
        "--all-scopes-completion",
        "--background-index",
    ],
    "git.mergeEditor": false,
    "files.exclude": {
        "**/builddir/": true
    },
    "files.watcherExclude": {
        "**/builddir/": true
    },
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "debug.onTaskErrors": "abort",
    "window.menuBarVisibility": "toggle",
    "zenMode.centerLayout": false,
    "zenMode.fullScreen": false,
    "zenMode.hideLineNumbers": false,
    "zenMode.hideTabs": false,
    "zenMode.restore": false,
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "window.openFilesInNewWindow": "on",
    "files.associations": {
        "config": "i3",
        "*.logcat": "log"
    },
    "explorer.confirmDelete": false,
    "C_Cpp.clang_format_path": "/opt/clang-format-static/clang-format-8",
    "explorer.confirmDragAndDrop": false,
    "workbench.colorTheme": "Default Dark+",
    "git.suggestSmartCommit": false,
    "git.confirmSync": false,
    "gitlens.mode.active": "zen",
    "editor.minimap.enabled": false,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "clangd.path": "/home/jk/.config/Code - OSS/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/16.0.2/clangd_16.0.2/bin/clangd",
    "window.zoomLevel": 1, 
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "(gdb) test modules-local",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/builddir/tests.any.${config:test-executable}.linux/test-${config:test-executable}",
                "args": [
                    "${config:test-tag}"
                ],
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}",
                "environment": [],
                "externalConsole": false,
                "MIMode": "gdb",
                "miDebuggerPath": "gdb",
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    },
                    {
                        "description": "Enable break on all exceptions",
                        "text": "catch throw",
                        "ignoreFailures": true
                    }
                ],
            },
            {
                "name": "(gdb) test a c++ binary",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/build/shared_modules/runner",
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}",
                "externalConsole": false,
                "MIMode": "gdb",
                "miDebuggerPath": "gdb",
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    },
                    {
                        "description": "Enable break on all exceptions",
                        "text": "catch throw",
                        "ignoreFailures": true
                    }
                ],
            },
            {
                "type": "lldb",
                "request": "launch",
                "name": "Debug unit tests in executable 'er'",
                "cargo": {
                    "args": [
                        "test",
                        "--no-run",
                        "--bin=er",
                        "--package=er",
                    ],
                    "filter": {
                        "name": "er",
                        "kind": "bin"
                    }
                },
                "args": [ "--test-threads=1" ],
                "cwd": "${workspaceFolder}"
            }
            ,        
        ],
        "inputs": [
            {
                "type": "pickString",
                "id": "test-executable",
                "description": "Select test-executable",
                "options": [
                    "elf_parser",
                    "function_obfuscator",
                    "secure_thread",
                ],
                "default": "elf_parser"
            },
            {
                "type": "promptString",
                "id": "test-tags",
                "description": "One test tag without brackets",
                "default": "" // nothing
            }
        ], 
    }
}